class Solution {
public:
   set<vector<int>> s;
    vector<vector<int>> soln;
    void print(vector<int> vp)
    {
        sort(vp.begin(),vp.end());
        s.insert(vp);
    }

void sum(vector<int> &A, int target,vector<int> &vp )
   {
       if(target==0)
       {
           print(vp);
           return ;
       }
       if(target<0)
        {
            return ;
        }
       for(int i=0;i<A.size();i++)
       {
           vp.push_back(A[i]);
           sum(A,target-A[i],vp);
           vp.pop_back();
       }
       return ;
   }

vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<int> soln;
        vector<vector<int>> ans;
        int count =0;
        sum(candidates,target,soln);
        for(auto it1:this->s)
        {
            ans.push_back(it1);
        }
        return ans;

    }
};
