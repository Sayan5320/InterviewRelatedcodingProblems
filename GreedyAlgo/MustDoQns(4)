////////////////////////////////meeting room////////////////////////////////////////
int Solution::solve(vector<vector<int> > &a) {
    int n = a.size();
    if(n <= 1)
        return n;
        
    vector<pair<int, int>> arr;
    for(int i=0; i<n; i++){
        arr.push_back({a[i][0], 1});    //mark arrival time as 1
        arr.push_back({a[i][1], 0});    //mark departure time as 0
    }
    sort(arr.begin(), arr.end());
    
    int res = 0, curr = 0, i = 0;
    for(int i=0; i<arr.size(); i++){
        if(arr[i].second == 1){     //count max no of rooms we need
            curr++;
            res = max(curr, res);
        }
        else{
            curr--;
        }
    }
    return res;
}

/////////////////////element occuring more than n/2 time/////////////
int Solution::majorityElement(const vector<int> &A) {
    int elem=0, count=1;
    for(int i=1; i<A.size(); ++i)
    {
        if(A[i]==A[elem]) ++count;
        else --count;
        if(count==0) elem=i, count=1;
    }
    return A[elem];
}

////////////////////////////mini jump to sit together///////////////////

int Solution::seats(string A)
{
vector v;
for(int i=0;i<A.size();i++)
{
if(A[i]=='x')
v.push_back(i);
}
long long ans=0;
int l=v.size()/2;// move all the elements to the median
for(int i=0;i<v.size();i++)
{
if(v[i]!=v[l])
ans+=(abs(v[i]-v[l])-(abs(l-i)))%10000003;
}
return ans%10000003;
}


/////////////////////////gas station//////////////////////////////////
very very easy sol
int Solution::canCompleteCircuit(const vector<int> &A, const vector<int> &B)
{
int i,sum=0,defi=0,cap=0,start=0;
for(i=0;i<A.size();i++)
{
cap += A[i] - B[i];
if(cap < 0)
{
start = i+1;
defi += cap;
cap = 0;
}
}
return ((defi+cap)>=0?start:-1);
}

//////////////////////////////seats//////////////////////////////////////

int Solution::seats(string A)
{
vector<int> v;
for(int i=0;i<A.size();i++)
{
if(A[i]=='x')
v.push_back(i);
}
long long ans=0;
int l=v.size()/2;//median
for(int i=0;i<v.size();i++)
{
if(v[i]!=v[l])
ans+=(abs(v[i]-v[l])-(abs(l-i)))%10000003;
}
return ans%10000003;
}
